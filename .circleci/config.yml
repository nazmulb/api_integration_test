version: 2.1
executors:
  node:
    docker:
      - image: 'circleci/node:10.15.0'
    shell: /bin/bash
    working_directory: ~/app
  server:
    machine:
      docker_layer_caching: true
    shell: /bin/bash
    working_directory: ~/app   
   
orbs:
  docker-publish: circleci/docker-publish@0.1.4

jobs:
  build:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Find the most recently generated cache used from any branch
            - v1-npm-deps-
      - run:
          name: Install Node.js dependencies with Npm
          command: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: ~/app
          paths:
            - .

  lint:
    executor: node
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Lint the source code
          command: npm run lint

  test:
    executor: server
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Start MySql Server
          command: sh ./.circleci/scripts/start-mysql.sh
      - run:
          name: Install Node
          command: |
            cat ./.circleci/scripts/nvm.sh >> ~/.bashrc
            source ~/.bashrc
            NVM install 10.15.0
      - run:
          name: Test
          command: |
            source ~/.bashrc
            NVM use 10.15.0
            npm version
            TEST_DATABASE_URL=mysql://root:123@localhost:3306/apimicro_test npm test
      - run:
          name: Generate Test Coverage Report
          command: |
            source ~/.bashrc
            NVM use 10.15.0
            TEST_DATABASE_URL=mysql://root:123@localhost:3306/apimicro_test npm run test:coverage
          when: always
      - store_test_results:
          path: ./reports
      - store_artifacts:
          path: ./reports

  publish:
    executor: server
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install docker-compose
          command: sh ./.circleci/scripts/docker-com.sh
      - run:
          name: Build Image
          command: sh ./.circleci/scripts/build-image.sh
      - docker-publish/check # DOCKER_LOGIN & DOCKER_PASSWORD need to be set as environment variable under a context of circleci.com.
      - docker-publish/deploy: # It would publish the images to docker hub.
          image: nazmulb/api_integration_test:latest
  deploy:
    executor: server
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Install docker-compose
          command: sh ./.circleci/scripts/docker-com.sh
      - run:
          name: Deploy
          command: |
            sh ./.circleci/scripts/deploy.sh
      - run:
          name: Health Check
          command: |
            sh ./is_healthy.sh
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
          filters:
            branches:
              only: develop
      - publish:
          context: org-global
          requires:
            - test
          filters:
            branches:
              only: develop
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master